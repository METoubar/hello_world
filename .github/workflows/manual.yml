name: Mixed inputs

on:
  workflow_dispatch:
    inputs:
      name:
        type: choice
        required: true
        description: Who to greet
        options:
          - ""
          - "dm"
          - "mp"
          - "sp"
      take_disk_snapshot:
        type: boolean
        description: "Take a snapshot from the disk before removing it"
        required: true
      environment:
        required: true
        description: "env"

jobs:
  synatx_checkup:
    name: Scanning Environment Name
    outputs:
      env_checks: ${{ steps.check_env_name.output.env_checks }}
    runs-on: ubuntu-latest
    steps:
      - name: check length
        id: check_env_name
        run: |
          ns=${{ github.event.inputs.team }}-${{ github.event.inputs.name }}
          size=${#ns} 
          if (( $ns == *['!'@#\$%^\&*()_+ ]* && $size -lt 16 ));
          then
            echo "make sure that your environment name does not contain special chars ['!'@#\$%^\&*()_+ ] and less than 16 character"
            echo "::set-output name=env_checks::false"
          elif (( $(kubectl get ns | grep -i ${{ github.event.inputs.team }}-${{ github.event.inputs.name }}) )); then
            echo "This environment already exist, please make sure to delete it, or use another name"
            echo "::set-output name=env_checks::false"
          elif ! (( $(kubectl get ns --no-header | grep -i ${{ github.event.inputs.team }} | wc -l) -lt 5 )); then
            echo "::set-output name=env_checks::false"
          else
            echo "::set-output name=env_checks::true"
          fi
        
        
#   results:
#     name: priniting output
#     needs: synatx_checkup
#     runs-on: ubuntu-latest
#     steps:
#       - name: printing output result
#         run: echo "${{ needs.synatx_checkup.outputs.env_checks }}"
        
        
  # greet:
  #   runs-on: ubuntu-latest
  #   needs: synatx_checkup
  #   steps:
  #     - name: Send greeting
  #       run:  echo "NAMESPACE=${{ github.event.inputs.team }}"-${{ github.event.inputs.name }}"
